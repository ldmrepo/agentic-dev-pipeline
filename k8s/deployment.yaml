apiVersion: apps/v1
kind: Deployment
metadata:
  name: agentic-app
  namespace: agentic-dev
  labels:
    app: agentic-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: agentic-app
  template:
    metadata:
      labels:
        app: agentic-app
    spec:
      containers:
      - name: app
        image: agentic-dev-pipeline:latest
        ports:
        - containerPort: 8000
        env:
        - name: AGENTIC_ENV
          value: "production"
        - name: AGENTIC_POSTGRES_HOST
          value: "postgres-service"
        - name: AGENTIC_REDIS_HOST
          value: "redis-service"
        - name: AGENTIC_CHROMA_HOST
          value: "chromadb-service"
        - name: AGENTIC_ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: agentic-secrets
              key: anthropic-api-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: agentic-app-service
  namespace: agentic-dev
spec:
  selector:
    app: agentic-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: LoadBalancer